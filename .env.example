# AD Reporting Application Environment Configuration

# Active Directory Configuration
AD_SERVER=your-dc.domain.local
AD_BASE_DN=DC=domain,DC=local
AD_USERNAME=CN=svc_reporting,OU=ServiceAccounts,DC=domain,DC=local
AD_PASSWORD=your-service-account-password

# Azure AD Configuration
AZURE_TENANT_ID=your-tenant-id
AZURE_CLIENT_ID=your-client-id
AZURE_CLIENT_SECRET=your-client-secret

# Database Configuration
DATABASE_URL=postgresql://postgres:password@postgres:5432/reporting
POSTGRES_DB=reporting
POSTGRES_USER=postgres
POSTGRES_PASSWORD=strong-password-here

# Redis Configuration
REDIS_URL=redis://:your-redis-password@redis:6379
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your-secure-redis-password

# Security Configuration
JWT_SECRET=generate-a-long-random-string-here-minimum-32-characters
JWT_REFRESH_SECRET=another-long-random-string-for-refresh-tokens
SESSION_SECRET=another-long-random-string-for-sessions

# Token Encryption (NEW - Required for secure token storage)
# CRITICAL: Generate a strong base64-encoded key for production use
# Generate with: openssl rand -base64 32
# This key is used to encrypt OAuth tokens at rest using AES-256-GCM
ENCRYPTION_KEY=CHANGE-ME-generate-base64-key-with-openssl-rand-base64-32

# Credential Encryption (Legacy - for backward compatibility)
# IMPORTANT: Generate strong random keys for production use
# You can generate a key using: openssl rand -hex 32
CREDENTIAL_ENCRYPTION_KEY=your-32-character-or-longer-encryption-key-change-in-production
CREDENTIAL_ENCRYPTION_SALT=your-encryption-salt-in-hex-format-generate-with-openssl-rand-hex-32

# Application Configuration
NODE_ENV=production
PORT=5000
FRONTEND_PORT=3000
API_BASE_URL=/api

# WSL Network Configuration
WSL_IP=172.24.16.5
WINDOWS_HOST_IP=172.24.16.1

# GitLab Configuration
GITLAB_URL=https://gitlab.company.com
GITLAB_PROJECT_ID=123
GITLAB_TOKEN=your-gitlab-access-token
GITLAB_REGISTRY_URL=registry.gitlab.company.com
GITLAB_REGISTRY_USER=gitlab-ci-token
GITLAB_REGISTRY_PASSWORD=your-registry-password

# CI/CD Configuration
CI_REGISTRY=registry.gitlab.company.com
CI_REGISTRY_IMAGE=registry.gitlab.company.com/your-group/ad-reporting-app
CI_REGISTRY_USER=gitlab-ci-token
CI_REGISTRY_PASSWORD=your-deploy-token

# Deployment Servers
STAGING_SERVER=staging.company.com
STAGING_USER=deploy
STAGING_SSH_PRIVATE_KEY=your-staging-ssh-private-key

PRODUCTION_SERVER=reporting.company.com
PRODUCTION_USER=deploy
PRODUCTION_SSH_PRIVATE_KEY=your-production-ssh-private-key

# Email Configuration (for notifications)
SMTP_HOST=smtp.company.com
SMTP_PORT=587
SMTP_USER=noreply@company.com
SMTP_PASSWORD=smtp-password
SMTP_FROM=AD Reporting App <noreply@company.com>

# Report Configuration
REPORT_TIMEOUT=300000
REPORT_MAX_ROWS=50000
REPORT_DEFAULT_LIMIT=1000
REPORT_EXPORT_PATH=/app/exports
REPORT_RETENTION_DAYS=90

# Security Settings
RATE_LIMIT_WINDOW=900000
RATE_LIMIT_MAX_REQUESTS=100
CORS_ORIGIN=http://localhost:3000,http://staging.company.com,http://reporting.company.com
ALLOWED_IPS=192.168.0.0/16,10.0.0.0/8,172.16.0.0/12

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_MAX_SIZE=10m
LOG_MAX_FILES=5
ENABLE_DB_LOGS=true
DB_LOG_LEVEL=info
LOG_DB_QUERIES=false
LOG_RETENTION_DAYS=30

# Backup Configuration
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=/opt/backups

# Health Check Configuration
HEALTH_CHECK_INTERVAL=300
HEALTH_CHECK_TIMEOUT=30

# Feature Flags
ENABLE_CUSTOM_REPORTS=true
ENABLE_REPORT_SCHEDULING=true
ENABLE_AUDIT_LOGGING=true
ENABLE_FIELD_DISCOVERY=true

# Development Settings (for local development only)
DEV_MODE=false
DEBUG=false
MOCK_AD_DATA=false
MOCK_AZURE_DATA=false

# Development Tools
PGADMIN_EMAIL=admin@yourdomain.com
PGADMIN_PASSWORD=your-secure-pgadmin-password